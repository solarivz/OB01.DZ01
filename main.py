# Менеджер задач
# Задача: Создай класс Task, который позволяет управлять задачами (делами).
# У задачи должны быть атрибуты: описание задачи, срок выполнения и статус
# (выполнено/не выполнено). Реализуй функцию для добавления задач, отметки
# выполненных задач и вывода списка текущих (не выполненных) задач.

# Класс задача с атрибутами описание задачи, срок выполнения и статус
class Task:
    def __init__(self, description, deadline): # при создании обьекта на основе класса Task
        # инициализируем атрибуты описание задачи, срок выполнения
        # атрибут статус по умолчанию для новой задачи "Не выполнено"
        self.description = description
        self.deadline = deadline
        self.completed = False


# Функция для добавления новой задачи - добавляется задача типа обьект вновь
# созданный с атрибутами переданными функции
def add_task(tasks, description, deadline):
    task = Task(description, deadline)
    tasks.append(task)
    print(f"Задача '{task.description}' срок выполнения '{task.deadline}' добавлена в список.")

# Функция для вывода списка задач
def list_tasks(tasks, completed=False):
    print("Список задач:")
    i = 1
    for task in tasks:
        if completed == task.completed:
            status = "Выполнено" if task.completed else "Не выполнено"
            print(f"{i}. Описание: '{task.description}', Срок выполнения: '{task.deadline}', Статус: {status}")
            i += 1
    print()

# Функция для отметки задачи - "Выполненно", здесь в функцию передается ссылка на обьект
# из списка
def mark_task_as_completed(task):
    task.completed = True
    print(f"Задача '{task.description}', Срок выполнения: '{task.deadline}', Статус: Выполнена")


# Инициализируем пустой список для хранения задач -  в списке будут хранится
# обьекты класса Task
tasks = []

# Добавляем задачи через вызов функции, передаем аргументы ссылку на
# обьект типа список, и две строковые переменные
add_task(tasks, "Выполнить задание 1 и 2 к модулю 4", "24.04.2024")
add_task(tasks, "Подготовиться к зачету", "30.04.2024")
add_task(tasks, "Помыть машину", "25.04.2024")

# Выводим список задач
list_tasks(tasks)

# Отмечаем задачу как выполненную ссылаемся на элемент списка с индексом 0
# Элементом списка под индексом 0 - это первая задача.
mark_task_as_completed(tasks[0])

# Выводим список задач
list_tasks(tasks)